<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- 模塊版本，取值相對固定 -->
    <modelVersion>4.0.0</modelVersion>

    <!-- 父級項目 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- 當前項目的信息 -->
    <groupId>cn.tedu</groupId>
    <artifactId>meimall-server</artifactId>
    <version>2.0</version>

    <!-- 當前項目是父級項目，需要顯式的配置packaging为pom -->
    <packaging>pom</packaging>

    <!-- 列舉當前項目的子模塊項目 -->
    <modules>
        <module>meimall-admin</module>
        <module>meimall-common</module>
    </modules>

    <!-- 屬性配置 -->
    <properties>
        <java.version>1.8</java.version>
        <spring-boot.version>2.5.0</spring-boot.version>
        <mybatis-spring-boot.version>2.2.2</mybatis-spring-boot.version>
        <mybatis-plus-spring-boot.version>3.3.0</mybatis-plus-spring-boot.version>
        <pagehelper-spring-boot.version>1.3.0</pagehelper-spring-boot.version>
        <druid-spring-boot.version>1.2.16</druid-spring-boot.version>
        <mysql.version>8.0.27</mysql.version>
        <lombok.version>1.18.20</lombok.version>
        <knife4j-spring-boot.version>2.0.9</knife4j-spring-boot.version>
        <fastjson.version>1.2.75</fastjson.version>
        <jjwt.version>0.9.1</jjwt.version>
        <hutool.version>5.8.15</hutool.version>
        <meimall.version>2.0</meimall.version>
    </properties>

    <!-- 依賴管理 -->
    <dependencyManagement>
        <!-- 管理的依賴項 -->
        <dependencies>
            <!-- meimall的通用項目 -->
            <dependency>
                <groupId>cn.tedu</groupId>
                <artifactId>meimall-common</artifactId>
                <version>${meimall.version}</version>
            </dependency>
            <!-- Knife4j Spring Boot：在線API文檔 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j-spring-boot.version}</version>
            </dependency>
            <!-- Mybatis整合Spring Boot的依賴項 -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot.version}</version>
            </dependency>
            <!-- Mybatis Plus整合Spring Boot的依賴項 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-spring-boot.version}</version>
            </dependency>
            <!-- 基於MyBatis或MyBatis Plus的分頁查詢框架 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot.version}</version>
            </dependency>
            <!-- Alibaba Druid數據庫連接池 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-spring-boot.version}</version>
            </dependency>
            <!-- MySQL的依賴項 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <!-- Lombok的依賴項，主要用於簡化POJO類的編寫 -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <!-- Spring Boot支持AOP編程的依賴項 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- Spring Boot支持Spring MVC的依賴項 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- Spring Boot支持Validation的依賴項 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- Spring Boot支持Redis編程的依賴項 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- Spring Boot支持Elasticsearch編程的依賴項 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- Spring Boot支持Spring Security的依賴項 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- fastjson：實現對象與JSON的相互轉換 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- JJWT（Java JWT） -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <!-- hutool：小工具集合 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <!-- Spring Boot測試的依賴項 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 構建項目的配置 -->
    <!-- 如果spring-boot-maven-plugin報錯： -->
    <!-- 1. 把此依賴項直接删除 -->
    <!-- 2. 手動添加version標籤，配置为spring-boot-starter-parent相同1的版本 -->
    <build>
        <!-- 插件 -->
        <plugins>
            <!-- Spring Boot支持Maven打包的插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
